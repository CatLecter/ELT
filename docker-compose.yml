services:
  postgres:
    image: postgres:14.1-alpine3.15
    container_name: postgres
    restart: always
    environment:
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - "${POSTGRES_PORT}:5432"

  admin_panel:
    build: ./movies_admin/
    container_name: admin_panel
    restart: always
    environment:
      - POSTGRES_DB=${POSTGRES_DB}
      - POSTGRES_USER=${POSTGRES_USER}
      - POSTGRES_PASSWORD=${POSTGRES_PASSWORD}
      - POSTGRES_HOST=postgres
      - POSTGRES_PORT=${POSTGRES_PORT}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./movies_admin/film_works/:/usr/src/movies_admin/film_works
    depends_on:
      - postgres
    command: gunicorn --bind 0.0.0.0:8000 config.wsgi --reload

  nginx:
    image: nginx:1.21.4
    container_name: nginx
    restart: on-failure
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./movies_admin/static/:/static
    ports:
      - "80:80"
    depends_on:
      - admin_panel
      - postgres

  elasticsearch:
    image: elasticsearch:7.16.2
    container_name: elasticsearch
    restart: always
    environment:
      - discovery.type=single-node
      - "ES_JAVA_OPTS=-Xms512m -Xmx512m"
    volumes:
      - es:/usr/share/elasticsearch/data
    ports:
      - ${ES_PORT}:9200
    depends_on:
      - postgres

  mongo:
    image: mongo:5.0.5
    container_name: mongo_storage
    restart: always
    environment:
      MONGO_INITDB_ROOT_USERNAME: ${MONGO_USER}
      MONGO_INITDB_ROOT_PASSWORD: ${MONGO_PASSWORD}
    volumes:
      - mongo:/data/db
    ports:
      - ${MONGO_PORT}:27017

  rabbitmq:
    image: rabbitmq:3.9.12
    container_name: rabbitmq
    restart: on-failure
    environment:
      RABBITMQ_DEFAULT_USER: ${RABBIT_USER}
      RABBITMQ_DEFAULT_PASS: ${RABBIT_PASSWORD}
    ports:
      - "5672:5672"
    volumes:
      - rabbitmq:/var/lib/rabbitmq

  etl:
    build: ./postgres_to_es/
    container_name: etl
    restart: always
    env_file:
      - ".env"
    volumes:
      - ./postgres_to_es/indexes/:/usr/src/etl/indexes
    depends_on:
      - rabbitmq
      - mongo
      - elasticsearch
      - postgres
    links:
      - rabbitmq

volumes:
  db:
  film_works:
  es:
  mongo:
  rabbitmq:
