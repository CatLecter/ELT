services:
  postgres:
    image: postgres:13.5-bullseye
    container_name: postgres
    networks:
      - backend
    restart: always
    environment:
      - POSTGRES_USER=${DB_USER}
      - POSTGRES_DB=${DB_NAME}
      - POSTGRES_PASSWORD=${DB_PASSWORD}
    volumes:
      - db:/var/lib/postgresql/data
    ports:
      - 5432:5432

  admin_panel:
    build: ./movies_admin/
    container_name: admin_panel
    restart: always
    environment:
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=postgres
      - DB_PORT=${DB_PORT}
      - SECRET_KEY=${SECRET_KEY}
    volumes:
      - ./movies_admin/film_works/:/usr/src/movies_admin/film_works
    networks:
      - backend
    depends_on:
      - postgres

  nginx:
    image: nginx:1.21.4
    container_name: nginx
    restart: on-failure
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./nginx/conf.d:/etc/nginx/conf.d
      - ./movies_admin/static/:/static
    networks:
      - backend
    ports:
      - 80:80
    depends_on:
      - admin_panel
      - postgres

volumes:
  db:
  film_works:

networks:
  backend:
    name: backend
    driver: bridge